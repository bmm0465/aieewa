"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/preprocess-pdfs/route";
exports.ids = ["app/api/preprocess-pdfs/route"];
exports.modules = {

/***/ "@langchain/openai":
/*!************************************!*\
  !*** external "@langchain/openai" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("@langchain/openai");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpreprocess-pdfs%2Froute&page=%2Fapi%2Fpreprocess-pdfs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpreprocess-pdfs%2Froute.ts&appDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpreprocess-pdfs%2Froute&page=%2Fapi%2Fpreprocess-pdfs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpreprocess-pdfs%2Froute.ts&appDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Documents_Dev_aieewa_app_api_preprocess_pdfs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/preprocess-pdfs/route.ts */ \"(rsc)/./app/api/preprocess-pdfs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/preprocess-pdfs/route\",\n        pathname: \"/api/preprocess-pdfs\",\n        filename: \"route\",\n        bundlePath: \"app/api/preprocess-pdfs/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\김민제\\\\Documents\\\\Dev\\\\aieewa\\\\app\\\\api\\\\preprocess-pdfs\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Documents_Dev_aieewa_app_api_preprocess_pdfs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/preprocess-pdfs/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcmVwcm9jZXNzLXBkZnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnByZXByb2Nlc3MtcGRmcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnByZXByb2Nlc3MtcGRmcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUMlRUElQjklODAlRUIlQUYlQkMlRUMlQTAlOUMlNUNEb2N1bWVudHMlNUNEZXYlNUNhaWVld2ElNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1QyVFQSVCOSU4MCVFQiVBRiVCQyVFQyVBMCU5QyU1Q0RvY3VtZW50cyU1Q0RldiU1Q2FpZWV3YSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMyQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpZWV3YS8/NTVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFzquYDrr7zsoJxcXFxcRG9jdW1lbnRzXFxcXERldlxcXFxhaWVld2FcXFxcYXBwXFxcXGFwaVxcXFxwcmVwcm9jZXNzLXBkZnNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3ByZXByb2Nlc3MtcGRmcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3ByZXByb2Nlc3MtcGRmc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJlcHJvY2Vzcy1wZGZzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxc6rmA66+87KCcXFxcXERvY3VtZW50c1xcXFxEZXZcXFxcYWllZXdhXFxcXGFwcFxcXFxhcGlcXFxccHJlcHJvY2Vzcy1wZGZzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3ByZXByb2Nlc3MtcGRmcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpreprocess-pdfs%2Froute&page=%2Fapi%2Fpreprocess-pdfs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpreprocess-pdfs%2Froute.ts&appDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/preprocess-pdfs/route.ts":
/*!******************************************!*\
  !*** ./app/api/preprocess-pdfs/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   maxDuration: () => (/* binding */ maxDuration),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.ts\");\n/* harmony import */ var _lib_embeddings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/embeddings */ \"(rsc)/./lib/embeddings.ts\");\n\n\n\n\nconst pdfParse = __webpack_require__(/*! pdf-parse */ \"(rsc)/./node_modules/pdf-parse/dist/cjs/index.cjs\");\n\n\nconst runtime = \"nodejs\";\nconst maxDuration = 300 // 5분으로 증가 (여러 PDF 처리 시간 고려)\n;\nconst dynamic = \"force-dynamic\";\n// 간단한 텍스트 스플리터 구현\nfunction splitText(text, chunkSize = 1000, chunkOverlap = 200) {\n    const chunks = [];\n    let start = 0;\n    while(start < text.length){\n        const end = Math.min(start + chunkSize, text.length);\n        let chunk = text.slice(start, end);\n        // 문장 경계에서 자르기 시도\n        if (end < text.length) {\n            const lastSentenceEnd = chunk.lastIndexOf(\".\");\n            const lastNewline = chunk.lastIndexOf(\"\\n\");\n            const lastBreak = Math.max(lastSentenceEnd, lastNewline);\n            if (lastBreak > start + chunkSize * 0.5) {\n                chunk = chunk.slice(0, lastBreak + 1);\n            }\n        }\n        chunks.push(chunk.trim());\n        start += chunk.length - chunkOverlap;\n        if (start >= text.length) break;\n        if (chunk.length <= chunkOverlap) start += chunkSize;\n    }\n    return chunks.filter((chunk)=>chunk.length > 0);\n}\nasync function POST(request) {\n    try {\n        console.log(\"기본 PDF 전처리 시작\");\n        // 환경 확인\n        const isProduction = \"development\" === \"production\";\n        const isVercel = process.env.VERCEL === \"1\";\n        console.log(\"환경 정보:\", {\n            isProduction,\n            isVercel\n        });\n        // pdf 폴더 경로 확인 (환경별로 다른 경로 시도)\n        let pdfFolderPath = \"\";\n        const possiblePaths = [\n            (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"public\", \"pdf\"),\n            (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"pdf\"),\n            (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"..\", \"pdf\") // Vercel 빌드 시 상위 폴더\n        ];\n        for (const path of possiblePaths){\n            if ((0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(path)) {\n                const files = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.readdir)(path);\n                const pdfFiles = files.filter((file)=>file.toLowerCase().endsWith(\".pdf\"));\n                if (pdfFiles.length > 0) {\n                    pdfFolderPath = path;\n                    break;\n                }\n            }\n        }\n        if (!pdfFolderPath) {\n            console.log(\"PDF 폴더를 찾을 수 없습니다. 가능한 경로들:\", possiblePaths);\n            // 프로덕션 환경에서는 기본 문서가 이미 데이터베이스에 있다고 가정\n            if (isProduction) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: true,\n                    message: \"프로덕션 환경에서는 기본 문서들이 이미 준비되어 있습니다.\",\n                    totalFiles: 0,\n                    results: [],\n                    summary: {\n                        success: 0,\n                        failed: 0,\n                        skipped: 0\n                    }\n                });\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"pdf 폴더를 찾을 수 없습니다. 로컬 환경에서는 pdf/ 폴더에 파일을 넣어주세요.\"\n            }, {\n                status: 404\n            });\n        }\n        // PDF 파일 목록 가져오기\n        const files = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.readdir)(pdfFolderPath);\n        const pdfFiles = files.filter((file)=>file.toLowerCase().endsWith(\".pdf\"));\n        console.log(`발견된 PDF 파일: ${pdfFiles.length}개`, pdfFiles);\n        // Supabase 클라이언트 초기화\n        const supabase = (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_4__.getServerSupabaseClient)();\n        // 기존 기본 문서들 정리 (선택사항)\n        const isForceRefresh = request.nextUrl.searchParams.get(\"force\") === \"true\";\n        if (isForceRefresh) {\n            console.log(\"기존 기본 문서들 정리 중...\");\n            // 기본 문서들 삭제 (filename이 'pdf/' 접두사를 가진 것들)\n            await supabase.from(\"document_chunks\").delete().like(\"metadata->>source\", \"pdf/%\");\n            const { data: defaultDocs } = await supabase.from(\"documents\").select(\"id\").like(\"filename\", \"pdf/%\");\n            if (defaultDocs && defaultDocs.length > 0) {\n                const docIds = defaultDocs.map((doc)=>doc.id);\n                await supabase.from(\"documents\").delete().in(\"id\", docIds);\n            }\n        }\n        const results = [];\n        // 각 PDF 파일 처리\n        for (const filename of pdfFiles){\n            try {\n                console.log(`처리 중: ${filename}`);\n                const filePath = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(pdfFolderPath, filename);\n                const fileBuffer = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.readFile)(filePath);\n                // PDF 파싱\n                const pdfData = await pdfParse(fileBuffer);\n                const text = pdfData.text;\n                if (!text || text.trim().length === 0) {\n                    console.warn(`${filename}: 텍스트를 추출할 수 없습니다.`);\n                    results.push({\n                        filename,\n                        status: \"failed\",\n                        reason: \"텍스트 추출 불가\"\n                    });\n                    continue;\n                }\n                // 텍스트 청킹\n                const chunks = splitText(text, 1000, 200);\n                console.log(`${filename}: ${chunks.length}개 청크 생성`);\n                // 기존에 같은 파일이 처리되었는지 확인\n                const { data: existingDoc } = await supabase.from(\"documents\").select(\"id\").eq(\"filename\", `pdf/${filename}`).single();\n                if (existingDoc && !isForceRefresh) {\n                    console.log(`${filename}: 이미 처리된 파일입니다. 건너뜀`);\n                    results.push({\n                        filename,\n                        status: \"skipped\",\n                        reason: \"이미 처리됨\"\n                    });\n                    continue;\n                }\n                // 문서 정보 저장\n                const { data: docData, error: docError } = await supabase.from(\"documents\").upsert({\n                    filename: `pdf/${filename}`,\n                    file_size: fileBuffer.length,\n                    text_content: text.substring(0, 10000),\n                    chunk_count: chunks.length,\n                    upload_time: new Date().toISOString()\n                }, {\n                    onConflict: \"filename\"\n                }).select().single();\n                if (docError) {\n                    console.error(`${filename} 문서 저장 오류:`, docError);\n                    results.push({\n                        filename,\n                        status: \"failed\",\n                        reason: `문서 저장 실패: ${docError.message}`\n                    });\n                    continue;\n                }\n                console.log(`${filename} 문서 저장 완료:`, docData.id);\n                // 기존 청크들 삭제 (업데이트인 경우)\n                if (existingDoc || isForceRefresh) {\n                    await supabase.from(\"document_chunks\").delete().eq(\"document_id\", docData.id);\n                }\n                // 청크들 벡터 임베딩과 함께 저장\n                const chunksWithMetadata = chunks.map((chunk, index)=>({\n                        text: chunk,\n                        metadata: {\n                            source: `pdf/${filename}`,\n                            chunkIndex: index,\n                            uploadTime: new Date().toISOString(),\n                            isDefault: true\n                        },\n                        chunkIndex: index\n                    }));\n                // 벡터 임베딩 생성 및 저장\n                await (0,_lib_embeddings__WEBPACK_IMPORTED_MODULE_5__.processChunksWithEmbeddings)(chunksWithMetadata, docData.id);\n                console.log(`${filename}: ${chunks.length}개 청크 벡터 임베딩 저장 완료`);\n                results.push({\n                    filename,\n                    status: \"success\",\n                    chunks: chunks.length,\n                    textLength: text.length\n                });\n            } catch (error) {\n                console.error(`${filename} 처리 오류:`, error);\n                results.push({\n                    filename,\n                    status: \"failed\",\n                    reason: error instanceof Error ? error.message : \"알 수 없는 오류\"\n                });\n            }\n        }\n        const successCount = results.filter((r)=>r.status === \"success\").length;\n        const failedCount = results.filter((r)=>r.status === \"failed\").length;\n        const skippedCount = results.filter((r)=>r.status === \"skipped\").length;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: `PDF 전처리 완료: 성공 ${successCount}개, 실패 ${failedCount}개, 건너뜀 ${skippedCount}개`,\n            totalFiles: pdfFiles.length,\n            results: results,\n            summary: {\n                success: successCount,\n                failed: failedCount,\n                skipped: skippedCount\n            }\n        });\n    } catch (error) {\n        console.error(\"PDF 전처리 전체 오류:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: `PDF 전처리에 실패했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`\n        }, {\n            status: 500\n        });\n    }\n}\n// 전처리 상태 확인을 위한 GET 엔드포인트\nasync function GET() {\n    try {\n        const supabase = (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_4__.getServerSupabaseClient)();\n        // 기본 문서들 조회\n        const { data: docs, error } = await supabase.from(\"documents\").select(\"id, filename, file_size, chunk_count, upload_time\").like(\"filename\", \"pdf/%\").order(\"upload_time\", {\n            ascending: false\n        });\n        if (error) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: `문서 조회 실패: ${error.message}`\n            }, {\n                status: 500\n            });\n        }\n        // 전체 청크 수 계산\n        const { data: chunksData } = await supabase.from(\"document_chunks\").select(\"document_id\").in(\"document_id\", docs?.map((doc)=>doc.id) || []);\n        const totalChunks = chunksData?.length || 0;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            documents: docs || [],\n            totalDocuments: docs?.length || 0,\n            totalChunks: totalChunks\n        });\n    } catch (error) {\n        console.error(\"PDF 상태 조회 오류:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: `상태 조회 실패: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/preprocess-pdfs/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/embeddings.ts":
/*!***************************!*\
  !*** ./lib/embeddings.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateEmbeddings: () => (/* binding */ generateEmbeddings),\n/* harmony export */   generateSingleEmbedding: () => (/* binding */ generateSingleEmbedding),\n/* harmony export */   processChunksWithEmbeddings: () => (/* binding */ processChunksWithEmbeddings),\n/* harmony export */   searchSimilarVectors: () => (/* binding */ searchSimilarVectors)\n/* harmony export */ });\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/openai */ \"@langchain/openai\");\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_langchain_openai__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./lib/supabase.ts\");\n\n\n// OpenAI Embeddings 클라이언트 초기화\nlet embeddingsClient = null;\nfunction getEmbeddingsClient() {\n    if (!embeddingsClient) {\n        if (!process.env.OPENAI_API_KEY) {\n            throw new Error(\"OPENAI_API_KEY 환경 변수가 설정되지 않았습니다.\");\n        }\n        embeddingsClient = new _langchain_openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIEmbeddings({\n            openAIApiKey: process.env.OPENAI_API_KEY,\n            modelName: \"text-embedding-3-small\",\n            batchSize: 100\n        });\n    }\n    return embeddingsClient;\n}\n// 텍스트 청크들을 벡터 임베딩으로 변환\nasync function generateEmbeddings(texts) {\n    try {\n        console.log(`${texts.length}개 텍스트에 대한 임베딩 생성 시작`);\n        const client = getEmbeddingsClient();\n        const embeddings = await client.embedDocuments(texts);\n        console.log(`임베딩 생성 완료: ${embeddings.length}개 벡터`);\n        return embeddings;\n    } catch (error) {\n        console.error(\"임베딩 생성 오류:\", error);\n        throw new Error(`임베딩 생성에 실패했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`);\n    }\n}\n// 단일 텍스트에 대한 벡터 임베딩 생성\nasync function generateSingleEmbedding(text) {\n    try {\n        const client = getEmbeddingsClient();\n        const embedding = await client.embedQuery(text);\n        return embedding;\n    } catch (error) {\n        console.error(\"단일 임베딩 생성 오류:\", error);\n        throw new Error(`임베딩 생성에 실패했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`);\n    }\n}\n// 벡터 유사도 검색 (코사인 유사도)\nasync function searchSimilarVectors(queryEmbedding, limit = 10, threshold = 0.7) {\n    try {\n        const supabase = (0,_supabase__WEBPACK_IMPORTED_MODULE_1__.getServerSupabaseClient)();\n        // 모든 청크의 임베딩을 가져와서 유사도 계산\n        const { data: chunks, error } = await supabase.from(\"document_chunks\").select(\"chunk_text, metadata, embedding\").not(\"embedding\", \"is\", null);\n        if (error) {\n            console.error(\"청크 조회 오류:\", error);\n            return [];\n        }\n        if (!chunks || chunks.length === 0) {\n            console.log(\"임베딩된 청크가 없습니다.\");\n            return [];\n        }\n        // 코사인 유사도 계산\n        const similarities = chunks.map((chunk)=>{\n            if (!chunk.embedding || !Array.isArray(chunk.embedding)) {\n                return {\n                    ...chunk,\n                    similarity: 0\n                };\n            }\n            const similarity = cosineSimilarity(queryEmbedding, chunk.embedding);\n            return {\n                ...chunk,\n                similarity\n            };\n        });\n        // 유사도 순으로 정렬하고 임계값 이상만 반환\n        const results = similarities.filter((item)=>item.similarity >= threshold).sort((a, b)=>b.similarity - a.similarity).slice(0, limit);\n        console.log(`벡터 검색 결과: ${results.length}개 (임계값: ${threshold})`);\n        return results;\n    } catch (error) {\n        console.error(\"벡터 검색 오류:\", error);\n        return [];\n    }\n}\n// 코사인 유사도 계산 함수\nfunction cosineSimilarity(vecA, vecB) {\n    if (vecA.length !== vecB.length) {\n        throw new Error(\"벡터 차원이 일치하지 않습니다.\");\n    }\n    let dotProduct = 0;\n    let normA = 0;\n    let normB = 0;\n    for(let i = 0; i < vecA.length; i++){\n        dotProduct += vecA[i] * vecB[i];\n        normA += vecA[i] * vecA[i];\n        normB += vecB[i] * vecB[i];\n    }\n    if (normA === 0 || normB === 0) {\n        return 0;\n    }\n    return dotProduct / (Math.sqrt(normA) * Math.sqrt(normB));\n}\n// 배치로 임베딩 생성 및 저장\nasync function processChunksWithEmbeddings(chunks, documentId) {\n    try {\n        const supabase = (0,_supabase__WEBPACK_IMPORTED_MODULE_1__.getServerSupabaseClient)();\n        // 배치 크기 설정 (API 제한 고려)\n        const batchSize = 50;\n        const totalBatches = Math.ceil(chunks.length / batchSize);\n        console.log(`${chunks.length}개 청크를 ${totalBatches}개 배치로 처리`);\n        for(let i = 0; i < chunks.length; i += batchSize){\n            const batch = chunks.slice(i, i + batchSize);\n            const batchNumber = Math.floor(i / batchSize) + 1;\n            console.log(`배치 ${batchNumber}/${totalBatches} 처리 중... (${batch.length}개 청크)`);\n            try {\n                // 텍스트 추출\n                const texts = batch.map((chunk)=>chunk.text);\n                // 임베딩 생성\n                const embeddings = await generateEmbeddings(texts);\n                // 데이터베이스에 저장\n                const chunksToInsert = batch.map((chunk, index)=>({\n                        document_id: documentId,\n                        chunk_text: chunk.text,\n                        chunk_index: chunk.chunkIndex,\n                        metadata: chunk.metadata,\n                        embedding: embeddings[index] // 벡터 임베딩 저장\n                    }));\n                const { error: insertError } = await supabase.from(\"document_chunks\").insert(chunksToInsert);\n                if (insertError) {\n                    console.error(`배치 ${batchNumber} 저장 오류:`, insertError);\n                } else {\n                    console.log(`배치 ${batchNumber} 저장 완료`);\n                }\n                // API 제한을 위한 지연\n                if (batchNumber < totalBatches) {\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                }\n            } catch (batchError) {\n                console.error(`배치 ${batchNumber} 처리 오류:`, batchError);\n            }\n        }\n        console.log(\"모든 청크 임베딩 처리 완료\");\n    } catch (error) {\n        console.error(\"청크 임베딩 처리 오류:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/embeddings.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClientSupabaseClient: () => (/* binding */ getClientSupabaseClient),\n/* harmony export */   getServerSupabaseClient: () => (/* binding */ getServerSupabaseClient),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseClient: () => (/* binding */ supabaseClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Function to get supabase client at runtime (for API routes)\nfunction getServerSupabaseClient() {\n    const url = \"https://puajxghokhribumtxrby.supabase.co\";\n    const key = process.env.SUPABASE_SERVICE_ROLE_KEY;\n    if (!url || !key) {\n        const missingVars = [];\n        if (!url) missingVars.push(\"NEXT_PUBLIC_SUPABASE_URL\");\n        if (!key) missingVars.push(\"SUPABASE_SERVICE_ROLE_KEY\");\n        throw new Error(`Missing Supabase environment variables: ${missingVars.join(\", \")}`);\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, key);\n}\n// Function to get anon client at runtime (for client-side usage)  \nfunction getClientSupabaseClient() {\n    const url = \"https://puajxghokhribumtxrby.supabase.co\";\n    const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n    if (!url || !key) {\n        throw new Error(\"Missing Supabase environment variables\");\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, key);\n}\n// Placeholder exports for build-time compatibility\nconst supabase = {};\nconst supabaseClient = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0Q7QUFFcEQsOERBQThEO0FBQ3ZELFNBQVNDO0lBQ2QsTUFBTUMsTUFBTUMsMENBQW9DO0lBQ2hELE1BQU1HLE1BQU1ILFFBQVFDLEdBQUcsQ0FBQ0cseUJBQXlCO0lBRWpELElBQUksQ0FBQ0wsT0FBTyxDQUFDSSxLQUFLO1FBQ2hCLE1BQU1FLGNBQWMsRUFBRTtRQUN0QixJQUFJLENBQUNOLEtBQUtNLFlBQVlDLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUNILEtBQUtFLFlBQVlDLElBQUksQ0FBQztRQUMzQixNQUFNLElBQUlDLE1BQU0sQ0FBQyx3Q0FBd0MsRUFBRUYsWUFBWUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyRjtJQUVBLE9BQU9YLG1FQUFZQSxDQUFDRSxLQUFLSTtBQUMzQjtBQUVBLG1FQUFtRTtBQUM1RCxTQUFTTTtJQUNkLE1BQU1WLE1BQU1DLDBDQUFvQztJQUNoRCxNQUFNRyxNQUFNSCxRQUFRQyxHQUFHLENBQUNTLDZCQUE2QjtJQUVyRCxJQUFJLENBQUNYLE9BQU8sQ0FBQ0ksS0FBSztRQUNoQixNQUFNLElBQUlJLE1BQU07SUFDbEI7SUFFQSxPQUFPVixtRUFBWUEsQ0FBQ0UsS0FBS0k7QUFDM0I7QUFFQSxtREFBbUQ7QUFDNUMsTUFBTVEsV0FBVyxDQUFDLEVBQVE7QUFDMUIsTUFBTUMsaUJBQWlCLENBQUMsRUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2FpZWV3YS8uL2xpYi9zdXBhYmFzZS50cz9jOTlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcclxuXHJcbi8vIEZ1bmN0aW9uIHRvIGdldCBzdXBhYmFzZSBjbGllbnQgYXQgcnVudGltZSAoZm9yIEFQSSByb3V0ZXMpXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXJ2ZXJTdXBhYmFzZUNsaWVudCgpIHtcclxuICBjb25zdCB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkxcclxuICBjb25zdCBrZXkgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZXHJcbiAgXHJcbiAgaWYgKCF1cmwgfHwgIWtleSkge1xyXG4gICAgY29uc3QgbWlzc2luZ1ZhcnMgPSBbXVxyXG4gICAgaWYgKCF1cmwpIG1pc3NpbmdWYXJzLnB1c2goJ05FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcpXHJcbiAgICBpZiAoIWtleSkgbWlzc2luZ1ZhcnMucHVzaCgnU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWScpXHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc3NpbmcgU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzOiAke21pc3NpbmdWYXJzLmpvaW4oJywgJyl9YClcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIGNyZWF0ZUNsaWVudCh1cmwsIGtleSlcclxufVxyXG5cclxuLy8gRnVuY3Rpb24gdG8gZ2V0IGFub24gY2xpZW50IGF0IHJ1bnRpbWUgKGZvciBjbGllbnQtc2lkZSB1c2FnZSkgIFxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2xpZW50U3VwYWJhc2VDbGllbnQoKSB7XHJcbiAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMXHJcbiAgY29uc3Qga2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcclxuICBcclxuICBpZiAoIXVybCB8fCAha2V5KSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzJylcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIGNyZWF0ZUNsaWVudCh1cmwsIGtleSlcclxufVxyXG5cclxuLy8gUGxhY2Vob2xkZXIgZXhwb3J0cyBmb3IgYnVpbGQtdGltZSBjb21wYXRpYmlsaXR5XHJcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IHt9IGFzIGFueVxyXG5leHBvcnQgY29uc3Qgc3VwYWJhc2VDbGllbnQgPSB7fSBhcyBhbnlcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImdldFNlcnZlclN1cGFiYXNlQ2xpZW50IiwidXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsImtleSIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJtaXNzaW5nVmFycyIsInB1c2giLCJFcnJvciIsImpvaW4iLCJnZXRDbGllbnRTdXBhYmFzZUNsaWVudCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiLCJzdXBhYmFzZUNsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/pdf-parse","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpreprocess-pdfs%2Froute&page=%2Fapi%2Fpreprocess-pdfs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpreprocess-pdfs%2Froute.ts&appDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5C%EA%B9%80%EB%AF%BC%EC%A0%9C%5CDocuments%5CDev%5Caieewa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();